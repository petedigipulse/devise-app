Notice after generating Devise Install

Some setup you must do manually if you haven't yet:

  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

     In production, :host should be set to the actual host of your application.

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root to: "home#index"

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

  4. If you are deploying on Heroku with Rails 3.2 only, you may want to set:

       config.assets.initialize_on_precompile = false

     On config/application.rb forcing your application to not access the DB
     or load models when precompiling your assets.

  5. You can copy Devise views (for customization) to your app by running:


       rails g devise:views

Respurce: Tutorial- http://www.sitepoint.com/devise-authentication-in-depth/

List of Devise Modules:
database_authenticatable – Users will be able to authenticate with a login and password that are stored in the database. (password is stored in a form of a digest).
registerable – Users will be able to register, update, and destroy their profiles.
recoverable – Provides mechanism to reset forgotten passwords.
rememberable – Enables “remember me” functionality that involves cookies.
trackable – Tracks sign in count, timestamps, and IP address.
validatable – Validates e-mail and password (custom validators can be used).

When using conifrmable & lockable son't forget to uncomment two lots of migration conditions.Also change User model migration file to include t.string :name if model doesn't include it, othewise it won't work.  (Trick for young players)

== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
