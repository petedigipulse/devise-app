Notice after generating Devise Install

Some setup you must do manually if you haven't yet:

  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

     In production, :host should be set to the actual host of your application.

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root to: "home#index"

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

  4. If you are deploying on Heroku with Rails 3.2 only, you may want to set:

       config.assets.initialize_on_precompile = false

     On config/application.rb forcing your application to not access the DB
     or load models when precompiling your assets.

  5. You can copy Devise views (for customization) to your app by running:


       rails g devise:views

Respurce: Tutorial- http://www.sitepoint.com/devise-authentication-in-depth/

List of Devise Modules:
database_authenticatable – Users will be able to authenticate with a login and password that are stored in the database. (password is stored in a form of a digest).
registerable – Users will be able to register, update, and destroy their profiles.
recoverable – Provides mechanism to reset forgotten passwords.
rememberable – Enables “remember me” functionality that involves cookies.
trackable – Tracks sign in count, timestamps, and IP address.
validatable – Validates e-mail and password (custom validators can be used).

When using conifrmable & lockable don't forget to uncomment two lots of migration conditions.
Also in Devise migration file to include t.string :name for locakable & confirmable to operate properly, othewise it won't work.  (Trick for young player

Devise Initializer::Devise.rb file set configurations:
CONFIG FOR LOCKABKE:
config.remember_for = 2.weeks
config.lock_strategy = :failed_attemots
config.unlock_keys = :both (Can provide either time or email if only want to use one)
config.maximum_attempts = 20
config.unlock_in = 1.hour (only use if using :time or:both)
config.last_attempt_warning = true 

CONFIG FOR CONFIRMABLE:
config.confirm_within = 3.days ( For how long token to stay valid, set to nil if you don't want token to expire)
config.reconfirmable = true

For live apps do 
config.mailer_sender(Puts to form)
config.secret_key(makes previous tokens invalid)

If you change password length don't forget to set it back to at least 8..128)

CREATE VIEWS:
COnfirmations = Contains a lone new.html.erb view for resend confirmation email.
Mailer = All emails stored here. 
Passwprd = Views with forms to request, password, reset email, and change.
REgistrations = The new.html.erb is rendered when user registered on site. The Edit.html contains from to update profile. 
Sessions = Only one view, which is login from site
Shared = Only one partial is present containing links being dispkayed on each Devise page (like "Forgot Password or resend confirmation")
Unlocks = ONly onbe view with form to request email with unlock link.

To customise views for certain modules only like Registerable or confirmable run (rails g devise:views -v registrations confirmations.
Note: Can have seperate views for different models if equipped with Devise ie homeowner or pro login on same site
Example ( rails g devise:views homeowners)
== README
